<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <title>Visor Avanzado de PDF</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto&display=swap" />
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      margin: 0;
      padding: 0;
      background: #111;
      color: #fff;
    }
    .container {
      text-align: center;
      background-image: url('https://picsum.photos/720/1280');
      background-size: cover;
      background-position: center;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .container-inner {
      background-color: rgba(0, 0, 0, 0.7);
      padding: 20px;
      border-radius: 10px;
    }
    .container-inner h1 {
      font-size: 2em;
      margin-bottom: 20px;
    }
    .container-inner button {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      background-color: #3b00ff;
      color: white;
      cursor: pointer;
      font-size: 1em;
    }
    .container-inner button:hover {
      background-color: #2600ff;
    }
    #viewer {
      display: none;
      flex-direction: row;
      height: 100vh;
    }
    .sidebar {
      width: 160px;
      background-color: #1e293b;
      padding: 10px;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .sidebar button,
    .sidebar label,
    .sidebar input {
      padding: 8px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 0.9em;
    }
    .sidebar label {
      background-color: #007bff;
      color: white;
      text-align: center;
    }
    .sidebar button {
      background-color: #3b00ff;
      color: white;
    }
    .pdf-container {
      flex-grow: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow-y: auto;
      background-color: #f0f0f0;
      padding: 10px;
      border-radius: 10px;
      position: relative;
    }
    .firma {
      position: absolute;
      bottom: 6px;
      right: 8px;
      font-size: 0.8em;
      color: #777;
    }
    .error {
      color: red;
      font-size: 16px;
      font-weight: bold;
      text-align: center;
    }
    @media (max-width: 600px) {
      #viewer {
        flex-direction: column;
      }
      .sidebar {
        flex-direction: row;
        overflow-x: auto;
        width: 100%;
        justify-content: space-around;
      }
      .pdf-container {
        height: 80vh;
      }
    }
  </style>
</head>
<body>
  <div class="container" id="container">
    <div class="container-inner">
      <h1>Visor Avanzado de PDF</h1>
      <button onclick="showViewer()">Entrar</button>
    </div>
  </div>

  <div id="viewer">
    <div class="sidebar">
      <label for="file-input">Seleccionar PDF</label>
      <input type="file" id="file-input" accept="application/pdf" />
      <button id="prev-page" disabled>Anterior</button>
      <button id="next-page" disabled>Siguiente</button>
      <button id="zoom-out">Zoom -</button>
      <button id="zoom-in">Zoom +</button>
      <input type="number" id="zoom-level" value="1.0" step="0.1" min="0.5" max="2.0" />
      <button id="rotate-left">⟲</button>
      <button id="rotate-right">⟳</button>
      <button id="full-screen">Pantalla Completa</button>
    </div>
    <div class="pdf-container" id="pdf-container">
      <div class="error" id="error"></div>
      <div class="firma">Autores: Ángel Osorio, Óscar Uribe</div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
  <script>
    const viewer = document.getElementById('viewer');
    const pdfContainer = document.getElementById('pdf-container');
    const errorElement = document.getElementById('error');
    const zoomLevelInput = document.getElementById('zoom-level');

    let pdfDoc = null;
    let currentPage = 1;
    let totalPages = 0;
    let zoomLevel = 1.0;
    let rotation = 0;

    function showViewer() {
      document.getElementById('container').style.display = 'none';
      viewer.style.display = 'flex';
    }

    function renderPage(pageNum) {
      if (!pdfDoc) return;

      pdfDoc.getPage(pageNum).then(page => {
        const viewport = page.getViewport({ scale: zoomLevel, rotation: rotation * 90 });
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = viewport.width;
        canvas.height = viewport.height;

        const renderContext = {
          canvasContext: ctx,
          viewport: viewport
        };

        page.render(renderContext).promise.then(() => {
          pdfContainer.innerHTML = '';
          pdfContainer.appendChild(canvas);
        }).catch(err => {
          errorElement.textContent = 'Error al renderizar la página.';
        });
      });
    }

    document.getElementById('file-input').addEventListener('change', event => {
      const file = event.target.files[0];
      if (!file || file.type !== 'application/pdf') {
        errorElement.textContent = 'Selecciona un archivo PDF válido.';
        return;
      }

      const reader = new FileReader();
      reader.onload = function (e) {
        const typedarray = new Uint8Array(e.target.result);

        pdfjsLib.getDocument(typedarray).promise.then(pdf => {
          pdfDoc = pdf;
          totalPages = pdf.numPages;
          currentPage = 1;
          renderPage(currentPage);
          document.getElementById('prev-page').disabled = false;
          document.getElementById('next-page').disabled = false;
        }).catch(() => {
          errorElement.textContent = 'Error al cargar el PDF.';
        });
      };
      reader.readAsArrayBuffer(file);
    });

    document.getElementById('prev-page').addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        renderPage(currentPage);
      }
    });

    document.getElementById('next-page').addEventListener('click', () => {
      if (currentPage < totalPages) {
        currentPage++;
        renderPage(currentPage);
      }
    });

    document.getElementById('zoom-in').addEventListener('click', () => {
      zoomLevel = Math.min(zoomLevel + 0.1, 2.0);
      zoomLevelInput.value = zoomLevel.toFixed(1);
      renderPage(currentPage);
    });

    document.getElementById('zoom-out').addEventListener('click', () => {
      zoomLevel = Math.max(zoomLevel - 0.1, 0.5);
      zoomLevelInput.value = zoomLevel.toFixed(1);
      renderPage(currentPage);
    });

    zoomLevelInput.addEventListener('change', () => {
      const val = parseFloat(zoomLevelInput.value);
      if (val >= 0.5 && val <= 2.0) {
        zoomLevel = val;
        renderPage(currentPage);
      }
    });

    document.getElementById('rotate-left').addEventListener('click', () => {
      rotation = (rotation - 1 + 4) % 4;
      renderPage(currentPage);
    });

    document.getElementById('rotate-right').addEventListener('click', () => {
      rotation = (rotation + 1) % 4;
      renderPage(currentPage);
    });

    document.getElementById('full-screen').addEventListener('click', () => {
      if (pdfContainer.requestFullscreen) {
        pdfContainer.requestFullscreen();
      }
    });
  </script>
</body>
</html>